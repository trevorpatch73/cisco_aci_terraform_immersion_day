name: Continous Deployment

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      TERRAFORM_STATUS: destroy
      #TF_LOG: "DEBUG"
      
      TF_VAR_CISCO_ACI_TERRAFORM_USERNAME: ${{ secrets.TF_VAR_CISCO_ACI_TERRAFORM_USERNAME }}
      TF_VAR_CISCO_ACI_TERRAFORM_PASSWORD: ${{ secrets.TF_VAR_CISCO_ACI_TERRAFORM_PASSWORD }}
      TF_VAR_CISCO_ACI_APIC_IP_ADDRESS: ${{ secrets.TF_VAR_CISCO_ACI_APIC_IP_ADDRESS}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3       

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1 

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format
        id: fmt
        run: terraform fmt

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan
        continue-on-error: true

      - name: Terraform Plan Status
        if: github.event_name == 'pull_request' && steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && env.TERRAFORM_STATUS == 'apply'
        run: terraform apply --auto-approve
        continue-on-error: true

      - name: Terraform Apply Status
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.apply.outcome == 'failure' && env.TERRAFORM_STATUS == 'apply'
        run:
          exit 1    

      - name: Terraform Destroy
        id: destroy
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && env.TERRAFORM_STATUS == 'destroy'
        run: | 
          terraform destroy --auto-approve                     
